package org.ianswitzer.itemhuntv3.managers;

import org.bukkit.*;
import org.bukkit.advancement.Advancement;
import org.bukkit.advancement.AdvancementDisplayType;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.entity.EntityType;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.potion.PotionEffectType;
import org.checkerframework.checker.units.qual.A;
import org.ianswitzer.itemhuntv3.interfaces.GenericTask;
import org.ianswitzer.itemhuntv3.tasks.*;

import java.util.*;

public class TaskManager {
    private HashMap<Integer,ArrayList<GenericTask>> tasks;
    private final Random random;
    private GenericTask winCondition;

    public TaskManager() {
        random = new Random();
        init();
    }

    public GenericTask getRandomTask(int round) {
        int difficulty = Math.min(round, 10);

        ArrayList<GenericTask> options = tasks.get(difficulty);
        return options.get(random.nextInt(options.size()));
    }

    public GenericTask getWinCondition(boolean sameForAll) {
        if (sameForAll) {
            if (winCondition == null) winCondition = getRandomTask(-1);

            return winCondition;
        } else return getRandomTask(-1);
    }

    public ArrayList<StatTask> getAllStatistics() {
        ArrayList<StatTask> list = new ArrayList<>();
        for (int key : tasks.keySet()) {
            for (GenericTask task : tasks.get(key)) {
                if (task instanceof StatTask) list.add((StatTask) task);
            }
        }
        return list;
    }

    private void addTask(ArrayList<GenericTask> taskArray, int weight, GenericTask task) {
        for (int i = 0; i < weight; i++) {
            taskArray.add(task);
        }
    }

    private void init() {
        tasks = new HashMap<>();
        // Round 1
        ArrayList<GenericTask> taskArray = new ArrayList<>();
        addTask(taskArray, 1, new ItemTask(Material.WOODEN_HOE));
        addTask(taskArray, 1, new ItemTask(Material.WOODEN_AXE));
        addTask(taskArray, 1, new ItemTask(Material.WOODEN_PICKAXE));
        addTask(taskArray, 1, new ItemTask(Material.WOODEN_SHOVEL));
        addTask(taskArray, 1, new ItemTask(Material.WOODEN_SWORD));
        addTask(taskArray, 1, new ItemTask(Material.STONE_PICKAXE));
        addTask(taskArray, 1, new ItemTask(Material.STONE_AXE));
        addTask(taskArray, 1, new ItemTask(Material.STONE_SWORD));
        addTask(taskArray, 1, new ItemTask(Material.STONE_SHOVEL));
        addTask(taskArray, 1, new ItemTask(Material.STONE_HOE));
        addTask(taskArray, 1, new ItemTask(Material.CRAFTING_TABLE));
        addTask(taskArray, 1, new ItemTask(Material.FURNACE));
        addTask(taskArray, 1, new ItemTask(Material.STICK));
        addTask(taskArray, 1, new ItemTask(Material.DIRT));
        addTask(taskArray, 1, new ItemTask(Material.SAND));
        addTask(taskArray, 1, new ItemTask(Material.GRAVEL));
        addTask(taskArray, 1, new ItemTask(Material.CLAY_BALL));
        addTask(taskArray, 1, new ItemTask(Material.COBBLESTONE_SLAB));
        addTask(taskArray, 1, new ItemTask(Material.COBBLESTONE_WALL));
        addTask(taskArray, 1, new ItemTask(Material.COBBLESTONE_STAIRS));
        addTask(taskArray, 1, new ItemTask(Material.WHEAT_SEEDS));
        addTask(taskArray, 1, new ItemTask(Material.LADDER));
        addTask(taskArray, 1, new ItemTask("CHEST_BOAT"));
        addTask(taskArray, 1, new ItemTask(Material.LEVER));
        addTask(taskArray, 1, new ItemTask("PRESSURE_PLATE"));
        addTask(taskArray, 1, new ItemTask("BUTTON"));
        addTask(taskArray, 1, new ItemTask("FENCE"));
        addTask(taskArray, 1, new ItemTask("GATE"));
        addTask(taskArray, 1, new ItemTask("LOG"));
        addTask(taskArray, 1, new ItemTask("PLANKS"));
        addTask(taskArray, 1, new ItemTask("DOOR"));
        addTask(taskArray, 1, new ItemTask(Material.CHARCOAL));
        addTask(taskArray, 1, new ItemTask(Material.COMPOSTER));
        addTask(taskArray, 1, new ItemTask(Material.BARREL));
        addTask(taskArray, 1, new ItemTask(Material.CHEST));
        addTask(taskArray, 1, new ItemTask(Material.BOWL));
        addTask(taskArray, 1, new StatTask(Statistic.OPEN_BARREL, 10));
        addTask(taskArray, 1, new StatTask(Statistic.CHEST_OPENED, 10));
        addTask(taskArray, 1, new StatTask(Statistic.CLIMB_ONE_CM, 1000, "CLIMB ONE BLOCK", 100));
        addTask(taskArray, 1, new StatTask(Statistic.SWIM_ONE_CM, 1000, "SWIM ONE BLOCK", 100));
        addTask(taskArray, 1, new StatTask(Statistic.JUMP, 50));
        addTask(taskArray, 1, new StatTask(Statistic.CRAFTING_TABLE_INTERACTION, 25));
        addTask(taskArray, 1, new StatTask(Statistic.DEATHS, 1));
        addTask(taskArray, 1, new StatTask(Statistic.DAMAGE_TAKEN, 500, "TAKE DAMAGE (HEARTS)", 20));
        addTask(taskArray, 1, new AdvancementTask("story/mine_stone"));
        addTask(taskArray, 1, new AdvancementTask("story/upgrade_tools"));
        addTask(taskArray, 1, new AdvancementTask("husbandry/plant_seed"));
        addTask(taskArray, 1, new LocationTask(Axis.Y, 50, false));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.FALL));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.SUFFOCATION));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.DROWNING));
        tasks.put(1, taskArray);
        // Round 2
        taskArray = new ArrayList<>();
        addTask(taskArray, 1, new ItemTask(Material.TORCH));
        addTask(taskArray, 1, new ItemTask(Material.STONE));
        addTask(taskArray, 1, new ItemTask(Material.STONE_BRICKS));
        addTask(taskArray, 1, new ItemTask(Material.CHISELED_STONE_BRICKS));
        addTask(taskArray, 1, new ItemTask(Material.STONE_BRICK_SLAB));
        addTask(taskArray, 1, new ItemTask(Material.STONE_BRICK_STAIRS));
        addTask(taskArray, 1, new ItemTask(Material.STONE_BUTTON));
        addTask(taskArray, 1, new ItemTask(Material.STONE_PRESSURE_PLATE));
        addTask(taskArray, 1, new ItemTask(Material.COAL));
        addTask(taskArray, 1, new ItemTask(Material.IRON_INGOT));
        addTask(taskArray, 1, new ItemTask(Material.IRON_NUGGET));
        addTask(taskArray, 1, new ItemTask(Material.RAW_IRON));
        addTask(taskArray, 1, new ItemTask(Material.SMOKER));
        addTask(taskArray, 1, new ItemTask(Material.GRANITE));
        addTask(taskArray, 1, new ItemTask(Material.DIORITE));
        addTask(taskArray, 1, new ItemTask(Material.ANDESITE));
        addTask(taskArray, 1, new ItemTask(Material.BRICK));
        addTask(taskArray, 1, new ItemTask(Material.BRICKS));
        addTask(taskArray, 1, new ItemTask(Material.FLOWER_POT));
        addTask(taskArray, 1, new ItemTask(Material.FLINT));
        addTask(taskArray, 1, new ItemTask(Material.FLETCHING_TABLE));
        addTask(taskArray, 1, new ItemTask(Material.GLASS));
        addTask(taskArray, 1, new ItemTask(Material.GLASS_BOTTLE));
        addTask(taskArray, 1, new ItemTask(Material.GLASS_PANE));
        addTask(taskArray, 1, new ItemTask("STAINED_GLASS"));
        addTask(taskArray, 1, new ItemTask(Material.LEATHER));
        addTask(taskArray, 1, new ItemTask(Material.FEATHER));
        addTask(taskArray, 1, new ItemTask(Material.SALMON));
        addTask(taskArray, 1, new ItemTask(Material.CHICKEN));
        addTask(taskArray, 1, new ItemTask(Material.COOKED_CHICKEN));
        addTask(taskArray, 1, new ItemTask(Material.COOKED_COD));
        addTask(taskArray, 1, new ItemTask(Material.COOKED_PORKCHOP));
        addTask(taskArray, 1, new ItemTask(Material.GRINDSTONE));
        addTask(taskArray, 1, new ItemTask(Material.BEEF));
        addTask(taskArray, 1, new ItemTask(Material.COOKED_BEEF));
        addTask(taskArray, 1, new ItemTask(Material.SUGAR));
        addTask(taskArray, 1, new ItemTask(Material.SUGAR_CANE));
        addTask(taskArray, 1, new ItemTask(Material.PAPER));
        addTask(taskArray, 1, new ItemTask(Material.CAMPFIRE));
        addTask(taskArray, 1, new ItemTask("WOOL"));
        addTask(taskArray, 1, new ItemTask("CARPET"));
        addTask(taskArray, 1, new LocationTask(Axis.Y, 150, true));
        addTask(taskArray, 1, new StatTask(Statistic.SPRINT_ONE_CM, 10000, "RUN ONE BLOCK", 100));
        addTask(taskArray, 1, new StatTask(Statistic.CROUCH_ONE_CM, 5000, "CROUCH ONE BLOCK", 100));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.COW, 5));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.CHICKEN, 5));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.SHEEP, 5));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.PIG, 5));
        addTask(taskArray, 1, new StatTask(Statistic.DEATHS, 5));
        addTask(taskArray, 1, new AdvancementTask("story/smelt_iron"));
        addTask(taskArray, 1, new AdvancementTask("husbandry/breed_an_animal"));
        addTask(taskArray, 1, new ItemTask(Material.RAW_COPPER));
        tasks.put(2, taskArray);
        // Round 3
        taskArray = new ArrayList<>();
        addTask(taskArray, 1, new LocationTask(new Location(Bukkit.getWorld("world"), 0, 0, 0)));
        addTask(taskArray, 1, new ItemTask(Material.IRON_AXE));
        addTask(taskArray, 1, new ItemTask(Material.IRON_HOE));
        addTask(taskArray, 1, new ItemTask(Material.IRON_SHOVEL));
        addTask(taskArray, 1, new ItemTask(Material.IRON_SWORD));
        addTask(taskArray, 1, new ItemTask(Material.IRON_PICKAXE));
        addTask(taskArray, 1, new ItemTask(Material.TRIPWIRE_HOOK));
        addTask(taskArray, 1, new ItemTask(Material.TRAPPED_CHEST));
        addTask(taskArray, 1, new ItemTask(Material.SHIELD));
        addTask(taskArray, 1, new ItemTask(Material.SHEARS));
        addTask(taskArray, 1, new ItemTask(Material.FLINT_AND_STEEL));
        addTask(taskArray, 1, new ItemTask(Material.SMITHING_TABLE));
        addTask(taskArray, 1, new ItemTask(Material.BUCKET));
        addTask(taskArray, 1, new ItemTask(Material.WATER_BUCKET));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.FIRE_TICK));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.HUNGER));
        addTask(taskArray, 1, new LocationTask(Axis.Y, 200, true));
        addTask(taskArray, 1, new LocationTask(Axis.Y, 0, false));
        addTask(taskArray, 1, new ItemTask(Material.CAULDRON));
        addTask(taskArray, 1, new ItemTask(Material.BLACK_WOOL));
        addTask(taskArray, 1, new ItemTask(Material.WHITE_CONCRETE));
        addTask(taskArray, 1, new ItemTask(Material.WHITE_CONCRETE_POWDER));
        addTask(taskArray, 1, new ItemTask(Material.LANTERN));
        addTask(taskArray, 1, new ItemTask("LEAVES"));
        addTask(taskArray, 1, new ItemTask(Material.RED_CARPET));
        addTask(taskArray, 1, new ItemTask(Material.YELLOW_WOOL));
        addTask(taskArray, 1, new ItemTask(Material.ORANGE_WOOL));
        addTask(taskArray, 1, new ItemTask(Material.RED_STAINED_GLASS));
        addTask(taskArray, 1, new ItemTask(Material.WHITE_BED));
        addTask(taskArray, 1, new ItemTask(Material.RAIL));
        addTask(taskArray, 1, new ItemTask(Material.BONE));
        addTask(taskArray, 1, new ItemTask(Material.STRING));
        addTask(taskArray, 1, new ItemTask(Material.ARROW));
        addTask(taskArray, 1, new ItemTask(Material.SPIDER_EYE));
        addTask(taskArray, 1, new ItemTask(Material.WHITE_DYE));
        addTask(taskArray, 1, new ItemTask(Material.GUNPOWDER));
        addTask(taskArray, 1, new ItemTask(Material.ROTTEN_FLESH));
        addTask(taskArray, 1, new ItemTask(Material.ARMOR_STAND));
        addTask(taskArray, 1, new ItemTask(Material.CHEST_MINECART));
        addTask(taskArray, 1, new ItemTask(Material.FURNACE_MINECART));
        addTask(taskArray, 1, new ItemTask(Material.HOPPER));
        addTask(taskArray, 1, new ItemTask(Material.MINECART));
        addTask(taskArray, 1, new ItemTask(Material.LEATHER_BOOTS));
        addTask(taskArray, 1, new ItemTask(Material.LEATHER_HELMET));
        addTask(taskArray, 1, new ItemTask(Material.LEATHER_CHESTPLATE));
        addTask(taskArray, 1, new ItemTask(Material.LEATHER_LEGGINGS));
        addTask(taskArray, 1, new ItemTask(Material.ITEM_FRAME));
        addTask(taskArray, 1, new ItemTask(Material.COPPER_INGOT));
        addTask(taskArray, 1, new ItemTask(Material.HEAVY_WEIGHTED_PRESSURE_PLATE));
        addTask(taskArray, 1, new ItemTask(Material.IRON_BARS));
        addTask(taskArray, 1, new ItemTask(Material.IRON_TRAPDOOR));
        addTask(taskArray, 1, new ItemTask(Material.IRON_BOOTS));
        addTask(taskArray, 1, new ItemTask(Material.IRON_HELMET));
        addTask(taskArray, 1, new ItemTask(Material.BOOK));
        addTask(taskArray, 1, new ItemTask(Material.IRON_CHESTPLATE));
        addTask(taskArray, 1, new ItemTask(Material.IRON_LEGGINGS));
        addTask(taskArray, 1, new ItemTask(Material.CHAIN));
        addTask(taskArray, 1, new StatTask(Statistic.DEATHS, 10));
        addTask(taskArray, 1, new ItemTask(Material.COBBLED_DEEPSLATE));
        addTask(taskArray, 1, new ItemTask(Material.BRUSH));
        addTask(taskArray, 1, new ItemTask("BANNER"));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.COW, 7));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.SHEEP, 7));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.PIG, 7));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.CHICKEN, 7));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.PROJECTILE));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.ENTITY_ATTACK));
        addTask(taskArray, 1, new StatTask(Statistic.DAMAGE_TAKEN, 4000, "TAKE DAMAGE (HEARTS)", 20));
        addTask(taskArray, 1, new AdvancementTask("adventure/kill_a_mob"));
        tasks.put(3, taskArray);
        // Round 4
        taskArray = new ArrayList<>();
        addTask(taskArray, 1, new ItemTask(Material.LAVA_BUCKET));
        addTask(taskArray, 1, new ItemTask(Material.RAW_GOLD));
        addTask(taskArray, 1, new ItemTask(Material.GOLD_INGOT));
        addTask(taskArray, 1, new ItemTask(Material.COPPER_BLOCK));
        addTask(taskArray, 1, new ItemTask(Material.DEEPSLATE));
        addTask(taskArray, 1, new ItemTask(Material.MILK_BUCKET));
        addTask(taskArray, 1, new ItemTask(Material.DEEPSLATE_BRICKS));
        addTask(taskArray, 1, new ItemTask(Material.LIGHT_WEIGHTED_PRESSURE_PLATE));
        addTask(taskArray, 1, new ItemTask(Material.APPLE));
        addTask(taskArray, 1, new ItemTask(Material.IRON_BLOCK));
        addTask(taskArray, 1, new ItemTask(Material.BLACK_CONCRETE));
        addTask(taskArray, 1, new ItemTask(Material.ORANGE_BED));
        addTask(taskArray, 1, new ItemTask(Material.BOW));
        addTask(taskArray, 1, new ItemTask(Material.FISHING_ROD));
        addTask(taskArray, 1, new ItemTask(Material.GUNPOWDER));
        addTask(taskArray, 1, new ItemTask(Material.BLUE_WOOL));
        addTask(taskArray, 1, new ItemTask(Material.BLUE_DYE));
        addTask(taskArray, 1, new ItemTask(Material.LIGHT_BLUE_DYE));
        addTask(taskArray, 1, new ItemTask(Material.CROSSBOW));
        addTask(taskArray, 1, new ItemTask(Material.ORANGE_CONCRETE));
        addTask(taskArray, 1, new ItemTask(Material.BOOKSHELF));
        addTask(taskArray, 1, new ItemTask(Material.LECTERN));
        addTask(taskArray, 1, new ItemTask(Material.SPIDER_EYE));
        addTask(taskArray, 1, new LocationTask(Axis.Y, 320, true));
        addTask(taskArray, 1, new LocationTask(Axis.Y, -60, false));
        addTask(taskArray, 1, new LocationTask(Axis.X, 1000, true));
        addTask(taskArray, 1, new LocationTask(Axis.Z, 1000, true));
        addTask(taskArray, 1, new LocationTask(Axis.X, -1000, false));
        addTask(taskArray, 1, new LocationTask(Axis.Z, -1000, false));
        addTask(taskArray, 1, new DistanceTask(1000));
        addTask(taskArray, 1, new StatTask(Statistic.ANIMALS_BRED, 5));
        addTask(taskArray, 1, new StatTask(Statistic.CAULDRON_FILLED, 3));
        addTask(taskArray, 1, new StatTask(Statistic.ENTITY_KILLED_BY, EntityType.CREEPER, 2));
        addTask(taskArray, 1, new StatTask(Statistic.ENTITY_KILLED_BY, EntityType.ZOMBIE, 2));
        addTask(taskArray, 1, new StatTask(Statistic.ENTITY_KILLED_BY, EntityType.SKELETON, 2));
        addTask(taskArray, 1, new StatTask(Statistic.ENTITY_KILLED_BY, EntityType.SPIDER, 2));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.SKELETON, 5));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.ZOMBIE, 5));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.SPIDER, 5));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.CREEPER, 5));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.ENTITY_EXPLOSION));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.LAVA));
        addTask(taskArray, 1, new AdvancementTask("husbandry/tactical_fishing"));
        addTask(taskArray, 1, new AdvancementTask("story/deflect_arrow"));
        tasks.put(4, taskArray);
        // Round 5
        taskArray = new ArrayList<>();
        addTask(taskArray, 1, new ItemTask(Material.PINK_WOOL));
        addTask(taskArray, 1, new ItemTask(Material.PINK_BED));
        addTask(taskArray, 1, new ItemTask(Material.GOLDEN_HOE));
        addTask(taskArray, 1, new ItemTask(Material.GOLDEN_AXE));
        addTask(taskArray, 1, new ItemTask(Material.GOLDEN_PICKAXE));
        addTask(taskArray, 1, new ItemTask(Material.LAPIS_LAZULI));
        addTask(taskArray, 1, new ItemTask(Material.LAPIS_BLOCK));
        addTask(taskArray, 1, new ItemTask(Material.REDSTONE));
        addTask(taskArray, 1, new ItemTask(Material.ANVIL));
        addTask(taskArray, 1, new ItemTask(Material.FIREWORK_ROCKET));
        addTask(taskArray, 1, new ItemTask(Material.BLAST_FURNACE));
        addTask(taskArray, 1, new ItemTask(Material.MAGMA_BLOCK));
        addTask(taskArray, 1, new ItemTask(Material.BLUE_CONCRETE));
        addTask(taskArray, 1, new ItemTask(Material.RED_MUSHROOM));
        addTask(taskArray, 1, new ItemTask(Material.BROWN_MUSHROOM));
        addTask(taskArray, 1, new ItemTask(Material.WRITABLE_BOOK));
        addTask(taskArray, 1, new ItemTask(Material.WRITTEN_BOOK));
        addTask(taskArray, 1, new ItemTask(Material.HAY_BLOCK));
        addTask(taskArray, 1, new ItemTask(Material.TROPICAL_FISH));
        addTask(taskArray, 1, new ItemTask(Material.COD));
        addTask(taskArray, 1, new ItemTask(Material.PUFFERFISH));
        addTask(taskArray, 1, new ItemTask(Material.SALMON_BUCKET));
        addTask(taskArray, 1, new StatTask(Statistic.ENTITY_KILLED_BY, EntityType.DROWNED, 1));
        addTask(taskArray, 1, new StatTask(Statistic.MINECART_ONE_CM, 5000, "MINECART ONE BLOCK", 100));
        addTask(taskArray, 1, new StatTask(Statistic.FISH_CAUGHT, 5));
        addTask(taskArray, 1, new ItemTask(Material.RAW_GOLD_BLOCK));
        addTask(taskArray, 1, new AdvancementTask("adventure/ol_betsy"));
        addTask(taskArray, 1, new AdvancementTask("adventure/shoot_arrow"));
        addTask(taskArray, 1, new AdvancementTask("adventure/sleep_in_bed"));
        tasks.put(5, taskArray);
        // Round 6
        taskArray = new ArrayList<>();
        addTask(taskArray, 1, new ItemTask(Material.NETHERRACK));
        addTask(taskArray, 1, new ItemTask(Material.CARROT));
        addTask(taskArray, 1, new ItemTask(Material.MOSSY_STONE_BRICKS));
        addTask(taskArray, 1, new ItemTask(Material.CARROT_ON_A_STICK));
        addTask(taskArray, 1, new ItemTask(Material.TNT));
        addTask(taskArray, 1, new ItemTask(Material.TNT_MINECART));
        addTask(taskArray, 1, new ItemTask(Material.GOLD_BLOCK));
        addTask(taskArray, 1, new ItemTask(Material.HONEY_BOTTLE));
        addTask(taskArray, 1, new ItemTask(Material.BLUE_GLAZED_TERRACOTTA));
        addTask(taskArray, 1, new ItemTask(Material.REDSTONE));
        addTask(taskArray, 1, new ItemTask(Material.REDSTONE_BLOCK));
        addTask(taskArray, 1, new ItemTask(Material.REDSTONE_TORCH));
        addTask(taskArray, 1, new ItemTask(Material.COMPASS));
        addTask(taskArray, 1, new ItemTask(Material.MAP));
        addTask(taskArray, 1, new ItemTask(Material.PISTON));
        addTask(taskArray, 1, new ItemTask(Material.CLOCK));
        addTask(taskArray, 1, new ItemTask(Material.DISPENSER));
        addTask(taskArray, 1, new ItemTask(Material.DROPPER));
        addTask(taskArray, 1, new ItemTask(Material.ACTIVATOR_RAIL));
        addTask(taskArray, 1, new ItemTask(Material.PUMPKIN));
        addTask(taskArray, 1, new ItemTask(Material.PUMPKIN_SEEDS));
        addTask(taskArray, 1, new ItemTask(Material.JACK_O_LANTERN));
        addTask(taskArray, 1, new ItemTask(Material.NOTE_BLOCK));
        addTask(taskArray, 1, new ItemTask(Material.MAGMA_BLOCK));
        addTask(taskArray, 1, new StatTask(Statistic.TARGET_HIT, 1));
        addTask(taskArray, 1, new StatTask(Statistic.NOTEBLOCK_TUNED, 50));
        addTask(taskArray, 1, new StatTask(Statistic.FISH_CAUGHT, 15));
        addTask(taskArray, 1, new AdvancementTask("story/enter_the_nether"));
        addTask(taskArray, 1, new AdvancementTask("husbandry/tame_an_animal"));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.HOT_FLOOR));
        addTask(taskArray, 1, new ItemTask(Material.DIAMOND));
        tasks.put(6, taskArray);
        // Round 7
        taskArray = new ArrayList<>();
        addTask(taskArray, 1, new ItemTask(Material.EGG));
        addTask(taskArray, 1, new AdvancementTask("husbandry/make_a_sign_glow"));
        addTask(taskArray, 1, new ItemTask(Material.GLOW_INK_SAC));
        addTask(taskArray, 1, new ItemTask(Material.POWERED_RAIL));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.FALLING_BLOCK));
        addTask(taskArray, 1, new ItemTask(Material.FERMENTED_SPIDER_EYE));
        addTask(taskArray, 1, new ItemTask(Material.NETHER_BRICK));
        addTask(taskArray, 1, new ItemTask(Material.NETHER_BRICKS));
        addTask(taskArray, 1, new ItemTask(Material.BELL));
        addTask(taskArray, 1, new ItemTask(Material.GLOWSTONE));
        addTask(taskArray, 1, new ItemTask(Material.MUSHROOM_STEW));
        addTask(taskArray, 1, new ItemTask(Material.SOUL_LANTERN));
        addTask(taskArray, 1, new ItemTask(Material.BASALT));
        addTask(taskArray, 1, new ItemTask(Material.QUARTZ_BLOCK));
        addTask(taskArray, 1, new ItemTask(Material.SOUL_SAND));
        addTask(taskArray, 1, new ItemTask(Material.SOUL_TORCH));
        addTask(taskArray, 1, new ItemTask(Material.SOUL_SOIL));
        addTask(taskArray, 1, new ItemTask(Material.DAYLIGHT_DETECTOR));
        addTask(taskArray, 1, new ItemTask(Material.SUSPICIOUS_STEW));
        addTask(taskArray, 1, new ItemTask(Material.GLOW_ITEM_FRAME));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.PIGLIN, 10));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.ZOMBIFIED_PIGLIN, 10));
        addTask(taskArray, 1, new StatTask(Statistic.ENTITY_KILLED_BY, EntityType.PIGLIN, 3));
        addTask(taskArray, 1, new StatTask(Statistic.ENTITY_KILLED_BY, EntityType.ZOMBIFIED_PIGLIN, 3));
        addTask(taskArray, 1, new AdvancementTask("story/mine_diamond"));
        tasks.put(7, taskArray);
        // Round 8
        taskArray = new ArrayList<>();
        addTask(taskArray, 1, new AdvancementTask("adventure/summon_iron_golem"));
        addTask(taskArray, 1, new ItemTask(Material.COMPARATOR));
        addTask(taskArray, 1, new ItemTask(Material.OBSERVER));
        addTask(taskArray, 1, new ItemTask(Material.SPECTRAL_ARROW));
        addTask(taskArray, 1, new ItemTask(Material.GLOW_INK_SAC));
        addTask(taskArray, 1, new ItemTask(Material.CRIMSON_DOOR));
        addTask(taskArray, 1, new ItemTask(Material.WARPED_DOOR));
        addTask(taskArray, 1, new ItemTask(Material.WARPED_STEM));
        addTask(taskArray, 1, new ItemTask(Material.STRIPPED_WARPED_HYPHAE));
        addTask(taskArray, 1, new ItemTask(Material.CRIMSON_STEM));
        addTask(taskArray, 1, new ItemTask(Material.STRIPPED_CRIMSON_HYPHAE));
        addTask(taskArray, 1, new ItemTask(Material.SHROOMLIGHT));
        addTask(taskArray, 1, new ItemTask(Material.REDSTONE_LAMP));
        addTask(taskArray, 1, new ItemTask(Material.FIRE_CHARGE));
        addTask(taskArray, 1, new StatTask(Statistic.ENTITY_KILLED_BY, EntityType.ENDERMAN, 1));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.POISON));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.FIRE_RESISTANCE));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.JUMP_BOOST));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.BLINDNESS));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.REGENERATION));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.NIGHT_VISION));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.WEAKNESS));
        addTask(taskArray, 1, new AdvancementTask("adventure/sniper_duel"));
        addTask(taskArray, 1, new AdvancementTask("adventure/bullseye"));
        addTask(taskArray, 1, new AdvancementTask("adventure/read_power_of_chiseled_bookshelf"));
        tasks.put(8, taskArray);
        // Round 9
        taskArray = new ArrayList<>();
        addTask(taskArray, 1, new StatTask(Statistic.TRADED_WITH_VILLAGER, 1));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.ENDERMAN, 3));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.PIGLIN_BRUTE, 1));
        addTask(taskArray, 1, new StatTask(Statistic.BELL_RING, 1));
        addTask(taskArray, 1, new ItemTask(Material.GOLDEN_APPLE));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.ABSORPTION));
        addTask(taskArray, 1, new ItemTask(Material.GOLDEN_CARROT));
        addTask(taskArray, 1, new ItemTask(Material.DIAMOND_PICKAXE));
        addTask(taskArray, 1, new ItemTask(Material.DIAMOND_AXE));
        addTask(taskArray, 1, new ItemTask(Material.DIAMOND_SHOVEL));
        addTask(taskArray, 1, new ItemTask(Material.DIAMOND_HOE));
        addTask(taskArray, 1, new ItemTask(Material.JUKEBOX));
        addTask(taskArray, 1, new ItemTask(Material.EMERALD));
        addTask(taskArray, 1, new ItemTask(Material.OBSIDIAN));
        addTask(taskArray, 1, new ItemTask(Material.GLOW_BERRIES));
        addTask(taskArray, 1, new ItemTask(Material.BREWING_STAND));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.GLOWING));
        addTask(taskArray, 1, new StatTask(Statistic.MOB_KILLS, 50));
        addTask(taskArray, 1, new AdvancementTask("story/form_obsidian"));
        addTask(taskArray, 1, new AdvancementTask("nether/distract_piglin"));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.CONTACT));
        addTask(taskArray, 1, new ItemTask(Material.BLACKSTONE_WALL));
        addTask(taskArray, 1, new ItemTask(Material.CRYING_OBSIDIAN));
        tasks.put(9, taskArray);
        // Round 10
        taskArray = new ArrayList<>();
        addTask(taskArray, 1, new ItemTask(Material.ENDER_PEARL));
        addTask(taskArray, 1, new StatTask(Statistic.ENTITY_KILLED_BY, EntityType.END_CRYSTAL, 1));
        addTask(taskArray, 1, new ItemTask(Material.PUMPKIN_PIE));
        addTask(taskArray, 1, new ItemTask(Material.WARPED_FUNGUS_ON_A_STICK));
        addTask(taskArray, 1, new ItemTask(Material.BLAZE_POWDER));
        addTask(taskArray, 1, new ItemTask(Material.BLAZE_ROD));
        addTask(taskArray, 1, new ItemTask(Material.END_CRYSTAL));
        addTask(taskArray, 1, new ItemTask(Material.NETHER_WART));
        addTask(taskArray, 1, new ItemTask(Material.ENDER_EYE));
        addTask(taskArray, 1, new ItemTask(Material.POISONOUS_POTATO));
        addTask(taskArray, 1, new ItemTask(Material.BLACKSTONE));
        addTask(taskArray, 1, new ItemTask(Material.POLISHED_BLACKSTONE));
        addTask(taskArray, 1, new ItemTask(Material.MAGMA_CREAM));
        addTask(taskArray, 1, new ItemTask(Material.CAKE));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.WITHER));
        addTask(taskArray, 1, new StatTask(Statistic.DEATHS, 50));
        addTask(taskArray, 1, new AdvancementTask("story/enchant_item"));
        addTask(taskArray, 1, new AdvancementTask("nether/find_bastion"));
        addTask(taskArray, 1, new AdvancementTask("nether/find_fortress"));
        addTask(taskArray, 1, new AdvancementTask("nether/loot_bastion"));
        addTask(taskArray, 1, new AdvancementTask("nether/return_to_sender"));
        addTask(taskArray, 1, new AdvancementTask("nether/ride_strider"));
        addTask(taskArray, 1, new AdvancementTask("adventure/fall_from_world_height"));
        addTask(taskArray, 1, new AdvancementTask("adventure/trim_with_any_armor_pattern"));
        addTask(taskArray, 1, new AdvancementTask("husbandry/wax_on"));
        addTask(taskArray, 1, new AdvancementTask("husbandry/wax_off"));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.WITHER));
        addTask(taskArray, 1, new ItemTask(Material.PRISMARINE_CRYSTALS));
        addTask(taskArray, 1, new ItemTask(Material.GILDED_BLACKSTONE));
        addTask(taskArray, 1, new ItemTask(Material.ENCHANTING_TABLE));
        addTask(taskArray, 1, new ItemTask(Material.SADDLE));
        addTask(taskArray, 1, new EnchantmentTask(Enchantment.PROTECTION, Material.ENCHANTED_BOOK));
        addTask(taskArray, 1, new EnchantmentTask(Enchantment.SHARPNESS, Material.ENCHANTED_BOOK));
        addTask(taskArray, 1, new EnchantmentTask(Enchantment.POWER, Material.ENCHANTED_BOOK));
        addTask(taskArray, 1, new ItemTask(Material.GHAST_TEAR));
        addTask(taskArray, 1, new StatTask(Statistic.RECORD_PLAYED, 1));
        addTask(taskArray, 1, new ItemTask(Material.GOLDEN_HORSE_ARMOR));
        addTask(taskArray, 1, new ItemTask(Material.IRON_HORSE_ARMOR));
        addTask(taskArray, 1, new ItemTask(Material.DIAMOND_BLOCK));
        addTask(taskArray, 1, new ItemTask(Material.EMERALD_BLOCK));
        addTask(taskArray, 1, new ItemTask(Material.RESPAWN_ANCHOR));
        addTask(taskArray, 1, new ItemTask(Material.HEART_OF_THE_SEA));
        addTask(taskArray, 1, new ItemTask(Material.ENDER_EYE));
        addTask(taskArray, 1, new ItemTask(Material.TINTED_GLASS));
        addTask(taskArray, 1, new ItemTask(Material.END_CRYSTAL));
        addTask(taskArray, 1, new ItemTask(Material.SPYGLASS));
        addTask(taskArray, 1, new ItemTask("MUSIC_DISC"));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.ENDERMAN, 10));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.PIGLIN_BRUTE, 5));
        addTask(taskArray, 1, new StatTask(Statistic.KILL_ENTITY, EntityType.ZOMBIFIED_PIGLIN, 33));
        addTask(taskArray, 1, new DistanceTask(3000));
        tasks.put(10, taskArray);

        // Win Condition Tasks
        taskArray = new ArrayList<>();
        addTask(taskArray, 1, new ItemTask(Material.DEAD_BRAIN_CORAL));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.INVISIBILITY));
        addTask(taskArray, 1, new ItemTask(Material.WAXED_WEATHERED_CUT_COPPER_STAIRS));
        addTask(taskArray, 1, new ItemTask(Material.ECHO_SHARD));
        addTask(taskArray, 1, new ItemTask(Material.DISC_FRAGMENT_5));
        addTask(taskArray, 1, new ItemTask(Material.MUSIC_DISC_PIGSTEP));
        addTask(taskArray, 1, new ItemTask(Material.TRIDENT));
        addTask(taskArray, 1, new ItemTask(Material.DEEPSLATE_DIAMOND_ORE));
        addTask(taskArray, 1, new ItemTask(Material.DEEPSLATE_LAPIS_ORE));
        addTask(taskArray, 1, new ItemTask(Material.DEEPSLATE_GOLD_ORE));
        addTask(taskArray, 1, new ItemTask(Material.NETHERITE_INGOT));
        addTask(taskArray, 1, new ItemTask(Material.CHAINMAIL_BOOTS));
        addTask(taskArray, 1, new ItemTask(Material.ENCHANTED_GOLDEN_APPLE));
        addTask(taskArray, 1, new ItemTask(Material.TOTEM_OF_UNDYING));
        addTask(taskArray, 1, new ItemTask(Material.NETHERITE_UPGRADE_SMITHING_TEMPLATE));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.HERO_OF_THE_VILLAGE));
        addTask(taskArray, 1, new PotionEffectTask(PotionEffectType.RESISTANCE));
        addTask(taskArray, 1, new LocationTask(Axis.Y, 328, true));
        addTask(taskArray, 1, new AdvancementTask("story/cure_zombie_villager"));
        addTask(taskArray, 1, new AdvancementTask("nether/ride_strider_in_overworld_lava"));
        addTask(taskArray, 1, new AdvancementTask("nether/summon_wither"));
        addTask(taskArray, 1, new AdvancementTask("nether/uneasy_alliance"));
        addTask(taskArray, 1, new AdvancementTask("husbandry/silk_touch_nest"));
        addTask(taskArray, 1, new AdvancementTask("adventure/honey_block_slide"));
        addTask(taskArray, 1, new EnchantmentTask(Enchantment.SILK_TOUCH, Material.DIAMOND_HOE));
        addTask(taskArray, 1, new EnchantmentTask(Enchantment.MENDING, Material.DIAMOND_SHOVEL));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.THORNS));
        addTask(taskArray, 1, new CauseOfDeathTask(EntityDamageEvent.DamageCause.SONIC_BOOM));
        tasks.put(-1, taskArray);
    }
}
